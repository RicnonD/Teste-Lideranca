const express = require("express");
const path = require("path");

const app = express(); // CriaÃ§Ã£o da instÃ¢ncia do Express
const port = process.env.PORT || 3000;

// âœ… ConfiguraÃ§Ã£o do EJS como motor de visualizaÃ§Ã£o
app.set("views", path.join(__dirname, "views")); // Caminho absoluto para a pasta views
app.set("view engine", "ejs");

// âœ… ConfiguraÃ§Ã£o para servir arquivos estÃ¡ticos
app.use(express.static(path.join(__dirname, "public")));

// âœ… Rota da pÃ¡gina inicial
app.get("/", (req, res) => {
    res.render("index"); // Renderiza views/index.ejs
});

// âœ… Outras rotas
app.get("/sobre", (req, res) => {
    res.render("pages/sobre"); // Renderiza views/pages/sobre.ejs
});

app.get("/contato", (req, res) => {
    res.render("pages/contato"); // Renderiza views/pages/contato.ejs
});

app.get("/teste", (req, res) => {
    res.render("pages/teste"); // Renderiza views/pages/teste.ejs
});

// âœ… Middleware para erros 404 (PÃ¡gina nÃ£o encontrada)
app.use((req, res) => {
    res.status(404).render("pages/404"); // Renderiza views/pages/404.ejs
});

// âœ… Iniciar o servidor
app.listen(port, () => {
    console.log(`ðŸš€ Servidor rodando na porta ${port}`);
});
